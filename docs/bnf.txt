<SourceFile> ::= <TopLevelStatement>* <EOF>

<TopLevelStatement> ::= <VarDeclaration> |
                        <FuncDeclaration>

<VarDeclaration> ::= ( "const" | "let" ) <Identifier> ":" <TypeName> ( "=" <Expression> ) ";"

<FuncDeclaration> ::= "function" <Identifier> "(" <FuncParameters> ")" ":" <TypeName> <StatementBlock>

<FuncParameters> ::= // TODO

<TypeName> ::= <Identifier>
  
<StatementBlock> ::= "{" <BlockLevelStatement>* "}"

<BlockLevelStatement> ::= <VarDeclaration> |
                          <DeferStatement> |
                          <ReturnStatement> |
                          <ExpressionStatement>

<DeferStatement> ::= "defer" <Expression> ";"

<ReturnStatement> ::= "return" <Expression> ";"
  
<ExpressionStatement> ::= <Expression> ";"
  
<Expression> ::= <CallExpression> | <IntegerLiteral> | <StringLiteral>

<CallExpression> ::= <Expression> "(" <Expression>? ("," <Expression>)* ")"

<IntegerLiteral> ::= <digit>*

<StringLiteral> ::= "\"" (<letter> | <digit>)* "\""

<Identifier> ::= (<letter> | <identifierSymbol>) (<letter> | <digit> | <identifierSymbol>)*

<identifierSymbol ::= "_"
  
<letter> ::= "[A-Za-z]"
  
<digit> ::= "[0-9]"
  


  
