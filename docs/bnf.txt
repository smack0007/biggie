<SourceFile> ::= <TopLevelStatement>* <EOF>

<TopLevelStatement> ::= <VarDeclaration> |
                        <FuncDeclaration>

<VarDeclaration> ::= ( "const" | "let" ) <Identifier> ":" <TypeName> ( "=" <Expression> ) ";"

<FuncDeclaration> ::= "function" <Identifier> "(" <FuncParameters> ")" ":" <TypeName> <StatementBlock>

<FuncParameters> ::= // TODO

<TypeName> ::= <Identifier>
  
<StatementBlock> ::= "{" <BlockLevelStatement>* "}"

<BlockLevelStatement> ::= <VarDeclaration> |
                          <DeferStatement> |
                          <ReturnStatement> |
                          <ExpressionStatement>

<DeferStatement> ::= "defer" <Expression> ";"

<ReturnStatement> ::= "return" <Expression> ";"
  
<ExpressionStatement> ::= <Expression> ";"
  
<Expression> ::= <AssignmentExpression> | <CallExpression>

<AssignmentExpression> ::= <Identifier> "=" <Assignment> | <EqualityExpression>

<EqualityExpression> ::= <ComparisonExpression> ( ( "!=" | "==" ) <ComparisonExpression> )*

<ComparisonExpression> ::= <AdditiveExpression> ( ( ">" | ">=" | "<" | "<=" ) <AdditiveExpression> )*

<AdditiveExpression> ::= <MultiplicativeExpression> ( ( "+" | "-" ) <MultiplicativeExpression> )*

<MultiplicativeExpression> ::= <UnaryExpression> ( ( "*" | "/" ) <UnaryExpression> )*

<UnaryExpression> ::= ( "!" | "-" ) <UnaryExpression> | <PrimaryExpression>

<PrimaryExpression> ::= <ParenthesizedExpression> | <BoolLiteral> | <IntLiteral> | <StringLiteral> | 

<ParenthesizedExpression> ::= "(" <Expression> ")"

<CallExpression> ::= <Expression> "(" <Expression>? ("," <Expression>)* ")"

<BoolLiteral> ::= "true" | "false"

<IntLiteral> ::= <digit>*

<StringLiteral> ::= "\"" ( <letter> | <digit> )* "\""

<Identifier> ::= ( <letter> | <identifierSymbol> ) ( <letter> | <digit> | <identifierSymbol> )*

<identifierSymbol ::= "_"
  
<letter> ::= "[A-Za-z]"
  
<digit> ::= "[0-9]"
  


  
